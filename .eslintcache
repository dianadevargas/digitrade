[{"/Users/techdev3/src/amplify-textract/src/index.js":"1","/Users/techdev3/src/amplify-textract/src/aws-exports.js":"2","/Users/techdev3/src/amplify-textract/src/App.js":"3","/Users/techdev3/src/amplify-textract/src/reportWebVitals.js":"4","/Users/techdev3/src/amplify-textract/src/transform.js":"5"},{"size":500,"mtime":1607952987012,"results":"6","hashOfConfig":"7"},{"size":863,"mtime":1608079340818,"results":"8","hashOfConfig":"7"},{"size":4614,"mtime":1608104024596,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1607952987013,"results":"10","hashOfConfig":"7"},{"size":2803,"mtime":1608097437233,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2s8b8w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/techdev3/src/amplify-textract/src/index.js",[],"/Users/techdev3/src/amplify-textract/src/aws-exports.js",[],"/Users/techdev3/src/amplify-textract/src/App.js",["23"],"import logo from './logo.png';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Amplify, { Predictions, Storage } from 'aws-amplify';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\nimport awsconfig from './aws-exports';\nimport transform from './transform';\n\nAmplify.configure(awsconfig);\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\nfunction TextIdentification() {\n  const [response, setResponse] = useState(\"You can add a photo by uploading directly from the app \")\n  const [imageUrl, setImageUrl] = useState('')\n  const [responseTable, setTable] = useState('')\n  const [responseForm, setForm] = useState('')\n\n  async function identifyFromFile(event) {\n    setResponse('identifying text...');\n    const { target: { files } } = event;\n    const [file,] = files || [];\n\n    if (!file) {\n      return;\n    }\n    const imgResp = await Storage.put(file.name, file, {\n      contentType: file.type || 'image/png',\n    })\n    console.log(`Upload:`, imgResp);\n    \n    Predictions.identify({\n      text: {\n        source: {\n          file,\n        },\n        format: \"ALL\", // Available options \"PLAIN\", \"FORM\", \"TABLE\", \"ALL\"\n      }\n    }).then((response) => {\n      const { text } = response;\n      const form = JSON.stringify(text.form || '');\n      const table = JSON.stringify(text.tables || '');\n      const fullText = text.fullText;\n      console.log(response);\n      localStorage.setItem('digi-raw', JSON.stringify(response));\n      Storage.put(`digi-raw.${file.name}.json`, JSON.stringify(response), {\n        contentType: 'text/json'\n      })\n        .then(result => console.log(`Upload response: ${result}`))\n        .catch(err => console.log(err));\n\n      setResponse(fullText);\n      setForm(form);\n      setTable(table);\n      // form extract\n    })\n      .catch(err => setResponse(JSON.stringify(err, null, 2)))\n  }\n\n  return (\n    <div className=\"Text\">\n      <div>\n        <h3>Text identification</h3>\n        <input type=\"file\" onChange={identifyFromFile}></input>\n        <img src={imageUrl} className=\"App-img\" alt=\"form\" />\n        <div>{response}</div>\n        <div>{responseTable}</div>\n        <div>{responseForm}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction FilesLoading(params) {\n  const [response, setFileLoadingResponse] = useState(\" Json form will be show here \")\n\n  async function downloadJsonFromFiles() {\n    setFileLoadingResponse('Reading files...');\n\n    const fileList = await Storage.list('digi-form.');\n    const jsonData = await Promise.all(fileList.map(async (item) => {\n      const data = await Storage.get(item.key, { download: true });\n      const bodyText = await data.Body.text();\n      const fileData = JSON.parse(bodyText);\n      localStorage.setItem(item.key, bodyText);\n      return fileData;\n    }));\n    setFileLoadingResponse('done');\n    localStorage.setItem('final-json', JSON.stringify(jsonData));\n  }\n\n  return (\n    <div className=\"Text\">\n      <div>\n        <h3>List of Json Files</h3>\n        <button onClick={downloadJsonFromFiles}>Download Forms</button>\n        <div>{response}</div>\n      </div>\n    </div>\n  );  \n}\n\nfunction FilesTransform(params) {\n  const [response, setFileTransResponse] = useState(\" Form Json form will be show here \")\n\n  async function downloadJsonRawFiles() {\n    setFileTransResponse('Reading files...');\n\n    const fileList = await Storage.list('digi-raw.');\n    fileList.map(async (item) => {\n      const data = await Storage.get(item.key, { download: true });\n      const imgFileName = item.key.replace(/digi-raw\\./gi, '').replace(/\\.json/i, '');\n      const imgData = await Storage.get(imgFileName);\n      localStorage.setItem(`${item.key}.img`, JSON.stringify(imgData));\n      data.Body.text().then(async (string) => {\n        const formData = transform(string, imgFileName);\n        localStorage.setItem(item.key, JSON.stringify(formData));\n        await Storage.put(`digi-form.${imgFileName}.json`, JSON.stringify(formData), {\n          contentType: 'text/json'\n        });\n      })\n    });\n    setFileTransResponse('done');\n  }\n\n  return (\n    <div className=\"Text\">\n      <div>\n        <h3>Transform Files In S3</h3>\n        <button onClick={downloadJsonRawFiles}>Transform Raw To Forms</button>\n        <div>{response}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <br></br>\n        <TextIdentification />\n        <FilesLoading />\n        <FilesTransform />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/techdev3/src/amplify-textract/src/reportWebVitals.js",[],"/Users/techdev3/src/amplify-textract/src/transform.js",["24"],{"ruleId":"25","severity":1,"message":"26","line":14,"column":20,"nodeType":"27","messageId":"28","endLine":14,"endColumn":31},{"ruleId":"29","severity":1,"message":"30","line":7,"column":5,"nodeType":"31","messageId":"32","endLine":20,"endColumn":6},"no-unused-vars","'setImageUrl' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]